{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Stack for Data Streams ingestion --> Kinesis Analytics --> Firehose DeliveryStream to S3.",
    "Parameters": {
        "KinesisDataStream": {
            "Description": "The name of your Kinesis Data Stream",
            "Type": "String"
        },
        "FirehoseStream": {
            "Description": "The name of your Firehose Stream",
            "Type": "String"
        },
        "KinesisAnalyticsApplication": {
            "Description": "The name of your Kinesis Analytics app",
            "Type": "String"
        }
    },

    "Resources": {
        "KinesisStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "Name": {
                    "Ref": "KinesisDataStream"
                },
                "RetentionPeriodHours": 24,
                "ShardCount": 1
            }
        },

        "KinesisAnalytics": {
            "Type": "AWS::KinesisAnalytics::Application",
            "Properties": {
                "ApplicationDescription": "Help transform user data",
                "ApplicationName": {
                    "Ref": "KinesisAnalyticsApplication"
                },
                "ApplicationCode": "CREATE OR REPLACE STREAM \"DESTINATION_USER_DATA\" (first VARCHAR(16), last VARCHAR(16), age INTEGER, gender VARCHAR(16), latitude FLOAT, longitude FLOAT); CREATE OR REPLACE PUMP \"STREAM_PUMP\" AS INSERT INTO \"DESTINATION_USER_DATA\" SELECT STREAM \"first\", \"last\", \"age\", \"gender\", \"latitude\", \"longitude\" FROM \"SOURCE_SQL_STREAM_001\" WHERE \"age\" >= 21;",
                "Inputs": [
                    {
                        "NamePrefix": "SOURCE_SQL_STREAM",
                        "InputSchema": {
                            "RecordColumns": [
                                {
                                    "Name": "first",
                                    "SqlType": "VARCHAR(8)",
                                    "Mapping": "$.results[0:].name.first"
                                },
                                {
                                    "Name": "last",
                                    "SqlType": "VARCHAR(16)",
                                    "Mapping": "$.results[0:].name.last"
                                },
                                {
                                    "Name": "age",
                                    "SqlType": "INTEGER",
                                    "Mapping": "$.results[0:].dob.age"
                                },
                                {
                                    "Name": "gender",
                                    "SqlType": "VARCHAR(16)",
                                    "Mapping": "$.results[0:].gender"
                                },
                                {
                                    "Name": "latitude",
                                    "SqlType": "NUMERIC",
                                    "Mapping": "$.results[0:].location.coordinates.latitude"
                                },
                                {
                                    "Name": "longitude",
                                    "SqlType": "NUMERIC",
                                    "Mapping": "$.results[0:].location.coordinates.longitude"
                                },
                                {
                                    "Name": "city",
                                    "SqlType": "VARCHAR(16)",
                                    "Mapping": "$.results[0:].location.city"
                                }
                            ],
                            "RecordFormat": {
                                "RecordFormatType": "JSON",
                                "MappingParameters": {
                                    "JSONMappingParameters": {
                                        "RecordRowPath": "$"
                                    }
                                }
                            }
                        },
                        "KinesisStreamsInput": {
                            "ResourceARN": {
                                "Fn::GetAtt": [
                                    "KinesisStream",
                                    "Arn"
                                ]
                            },
                            "RoleARN": {
                                "Fn::GetAtt": [
                                    "KinesisAnalyticsRole",
                                    "Arn"
                                ]
                            }
                        }
                    }
                ]
            }
        },

        "KinesisAnalyticsOutput": {
            "Type": "AWS::KinesisAnalytics::ApplicationOutput",
            "Properties": {
                "ApplicationName": {
                    "Ref": "KinesisAnalytics"
                },
                "Output": {
                    "Name": "DESTINATION_USER_DATA",
                    "DestinationSchema": {
                        "RecordFormatType": "JSON"
                    },
                    "KinesisFirehoseOutput": {
                        "ResourceARN": {
                            "Fn::GetAtt": [
                                "KinesisFirehose",
                                "Arn"
                            ]
                        },
                        "RoleARN": {
                            "Fn::GetAtt": [
                                "KinesisAnalyticsRole",
                                "Arn"
                            ]
                        }
                    }
                }
            }
        },

        "KinesisAnalyticsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "kinesisanalytics.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Open",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        "KinesisFirehose": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": {
                    "Ref": "FirehoseStream"
                },
                "ExtendedS3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "S3Bucket"
                                }
                            ]
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 1
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": "firehose/",
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "KinesisFirehoseRole",
                            "Arn"
                        ]
                    },
                    "CloudWatchLoggingOptions": {
                        "Enabled": true,
                        "LogGroupName": "deliverystream",
                        "LogStreamName": "elasticsearchDelivery"
                    }
                }
            }
        },

        "KinesisFirehoseRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "firehose.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "firehose-s3-stream-access",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3Bucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3Bucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:GetShardIterator",
                                        "kinesis:GetRecords",
                                        "kinesis:ListShards"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "KinesisStream",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Path": "/"
            }
        },

        "S3Bucket": {
            "Type": "AWS::S3::Bucket"
        }
    }
}